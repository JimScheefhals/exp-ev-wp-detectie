import pandas as pd
from dotenv import load_dotenv
from pathlib import Path
import os

class DataLoader:

    def __init__(self):
        load_dotenv()
        self.data_dir = os.getenv("DATA_DIR")

    def load_elaad_charging_profiles(
            self,
            capacities: list[int] = [4, 8, 11]
    ) -> pd.DataFrame:
        """
        Load all E-laad charging profiles. Assumes the main_folder_path contains subfolders for different charger
        capacities, where the subfolders contain only csv files generated by the E-laad LV profile generator.
        https://platform.elaad.io/analyse/low-voltage-charging-profiles/
        """
        main_folder_path = Path(self.data_dir, "elaad/laadprofielen")
        df = pd.DataFrame()

        last_run_id_ = 0

        for power_capacity in capacities:

            folder_path = Path(main_folder_path, f"{power_capacity}kw")
            files_in_folder = os.listdir(folder_path)

            for file_name in files_in_folder:

                df_file = pd.read_csv(Path(folder_path, file_name))
                df_file["run_id"] = df_file["run_id"] + last_run_id_
                df_file["capacity"] = power_capacity

                df = pd.concat([df, df_file])
                last_run_id_ = df["run_id"].max()

        return df

    def load_pulse_baseload_profiles(self) -> pd.DataFrame:
        """
        Load PULSE baseload profiles.
        Assumes the main_folder_path contains the file "pulse_ev_detection.parquet"
        """
        file_path = Path(self.data_dir, "pulse_ev_detection.parquet")
        return pd.read_parquet(file_path)

    def load_pulse_labels(self) -> pd.DataFrame:
        """
        Load PULSE labels.
        Assumes the main_folder_path contains the file "pulse_labelling.xlsx"
        """
        file_path = Path(self.data_dir, "pulse_labelling.xlsx")
        return pd.read_excel(file_path)

if __name__ == "__main__":
    loader = DataLoader()
    elaad = loader.load_elaad_charging_profiles()
    pulse = loader.load_pulse_baseload_profiles()
    labels = loader.load_pulse_labels()
    print(pulse)